f= open('<имя файла>') - открывает файл, но всегда нужно в конце кода закрывать (f.close() )
<имя переменной> = f.read() - читает файл
f.close() - закрывает файл
with open('<имя файла>') as f:  - открывает файл, но без надобности в конце закрывать его
f.readline() - читает 1 строчку файла


Встроенный в Python метод strip() удобно удаляет начальные и конечные пробелы из строки.
Метод split() в Python используется для разбиения строки на список подстрок на основе указанного разделителя.



f.readlines() - читает сразу все строки в список

f.write("текст") - перезаписывает документ , но чтобы использовать метод write нужно в первой строчке (открытия) после имени файла написать , 'w') as f:
но метод 'w' означает перезаписывание файла
чтобы не удалять все, а добавлять в конец, есть метод 'a'

До этого момента мы всегда использовали относительный путь файла (при open('<test.txt>')
Его стоит использовать если это временный файл, или конкретный путь не задан
Существует также абсолютный путь файла(от корневого каталога) open('C:\Users\python\test.txt')
Его стоит использовать если работаешь с конкретной директорией

чтобы получить путь можно прописать 2 команды :

1)import os #пишется в самом начале кода

2)print(os.getcw())



Открытие файла на чтение
Цикл for
Первая строчка - название блюда
Вторая строчка - сколько ингредиентов (преобразуем в инт)
Далее второй цикл for по инту из пункта 4
Разделяем строку strip split
Дальше создаем словарь, можно через через zip, можно явно
Не забываем пропускать строку